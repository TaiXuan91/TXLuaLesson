太玄的Lua编程语言课

本教程已托管到Github：https://github.com/TaiXuan91/TXLuaLesson

# 0Xeee
## 前置知识
## 正文
## 后续推荐

## 闲谈

add xx to yy
把xx加到yy中

Stage3字符串处理
0X16字符串处理
0X1A转义字符
0X1B写剧本
0X1F读写终端
0X20自定义计算器
0X21格式化输出
0X22更多格式

正则表达式是一个新的stage,需要前置为Stage3字符串处理,流程控制
模块是一个专门的Stage,需要前置是Stage4理解函数,Stage5表结构
数据结构是一个专门的模块.用表结构实现其他.

流程控制中要介绍Lua的三元表达式

Stage4理解函数
0X17函数为值
0X1C变量增删
0X1D变量作用域
0X1E闭包
0X23计数工具

Stage5表结构(字典,表嵌套)
0X18简单的表
0X24词典
0X25表嵌套
后继是模块
遍历

Stage6流程控制
0X14选择结构
0X19分段函数
0X26条件表达式
0X27跳转语句
*0X28循环语句
*0X29再谈循环
后继面向对象编程(独立分支)
(后继递归)
后继表的遍历
28当型循环,直到型循环
29
2A
2B
...
for和后边的遍历,结合表来介绍.

Stage7正则表达式
Stage8模块
结合表结构和流程控制,介绍遍历表的两个函数ipairs和pairs

文件读写(io和file的函数全部重新介绍)
(io.write和print的区别)




面向对象编程(表作为对象,表加闭包实现面向对象 )(函数加冒号定义和函数加冒号定义)
函数式编程(用三元表达式和递归,替换流程控制的功能)(用尾递归减少内存消耗)

本课程的整体后继
函数式编程
面向对象编程
代数和符号运算
数据结构


如果成员是函数，用冒号代替点。表示把表本身作为第一个参数传递给函数。
The colon syntax is used for defining methods, that is, functions that have an implicit extra parameter self. Thus, the statement

     function t.a.b.c:f (params) body end
is syntactic sugar for

     t.a.b.c.f = function (self, params) body end

     self并不是一个关键字.这只是一种语法糖


函数式编程
lambda表达式
屠龙之技

...的使用,
除了可以在函数中使用,也可以在脚本里使用
表示主函数参数(从命令行得到的参数)


函数式编程,函数取代流程控制.

11. 循环结构用来处理需要反复实施的动作.需要注意的是,一般的编程教材喜欢强调循环结构能代替重复的代码调用.却没有强调另一个问题.
    *  循环可以替代重复地编写形式相同的代码.例如循环100次可以替代把循环的代码(循环体)复制粘贴100次然后执行.
    * 反之重复书写(或者复制粘贴)相同形式的代码不能取代循环结构.因为循环结构的循环次数可以通过变量来确定.但是对于静态编译的语言,复制粘贴了多少次,就会执行多少次.不可能在程序运行过程中更改.
    (但是对于动态语言,可以通过动态生成代码完成选择,循环等结构控制.但是这样做的效率非常低下)

    8. 对于while,如果循环条件永远为真(例如在循环条件表达式位置写了一个true或者恒真表达式),则称这种循环为"死循环".因为它的执行永远不可能停止.
9. repeat也可以是死循环,只要它的循环终止条件恒假.
10. 
    
    关于循环和复制代码
    演示循环
    循环嵌套,和选择等其他符合句的嵌套.
    break和continue,
    Lua没有continue,可以通过循环嵌套选择结构实现.