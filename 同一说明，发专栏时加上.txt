太玄的Lua编程语言课

本教程已托管到Github：https://github.com/TaiXuan91/TXLuaLesson

# 0Xeee
## 前置知识
## 正文
## 后续推荐

## 闲谈

add xx to yy
把xx加到yy中

Stage3字符串处理
0X16字符串处理
0X1A转义字符
0X1B写剧本
0X1F读写终端
0X20自定义计算器
0X21格式化输出
0X22更多格式
0X2A支持UTF8

模块是一个专门的Stage,需要前置是Stage4理解函数,Stage5表结构
数据结构是一个专门的模块.用表结构实现其他.

动态代码编译

Stage4理解函数
0X17函数为值
0X1C变量增删
0X1D变量作用域
0X1E闭包
0X23计数工具
新增闭包和迭代器章节
  function list_iter (t)
      local i = 0
      local n = table.getn(t)
      return function ()
               i = i + 1
               if i <= n then return t[i] end
             end
    end

Stage5表结构(字典,表嵌套)
0X18简单的表
0X24词典
0X25表嵌套
(添加对Stage6的依赖)
0X2C表的遍历
0X2D对表操作
*0X2E更多对表操作
表的相关函数
迭代器的原理解析
后继是模块
遍历
全局就是一张大表

独立lua的相关内容(命令行参数等)

垃圾回收和弱表

异常处理
pcall,xpcall

模块编写
模块涉及到的函数

后继面向对象编程(独立分支)
(后继递归)
后继表的遍历
for和后边的遍历,结合表来介绍.

for循环
表遍历
map
表是一种构建新类型的方法(函数也是)

为lua建立类型检查系统
任意精度数和分数,带根号形式
符号运算等

lua线性代数支持

Stage8模块
结合表结构和流程控制,介绍遍历表的两个函数ipairs和pairs

文件读写(io和file的函数全部重新介绍)
(io.write和print的区别)

三个点...的用法


面向对象编程(表作为对象,表加闭包实现面向对象 )(函数加冒号定义和函数加冒号定义)
函数式编程(用三元表达式和递归,替换流程控制的功能)(用尾递归减少内存消耗)

本课程的整体后继
代数和符号运算



如果成员是函数，用冒号代替点。表示把表本身作为第一个参数传递给函数。

函数式编程
lambda表达式
屠龙之技

...的使用,
除了可以在函数中使用,也可以在脚本里使用
表示主函数参数(从命令行得到的参数)

next和ipair,pairs

函数式编程,函数取代流程控制.

从源码安装lua

严格的语法表述
注释的写法

BNF嵌入到Lua中介绍.

广义比较
元表
以后很多演示代码就不放在文本里.而是写成lua文件(加注释).专门有一个放源码的文件夹.
#正则表达式(另外弄一个专题)
#面向对象特性(另外弄一个专题)
#函数式编程,lambda表达式,用lambda表达式替代流程控制和值(另外弄一个专题)
#BNF和严格的Lua语法(另外弄一个专题)
#数据结构(另外弄一个专题)
#线程和并发技术(另外弄一个专题)
#做个小专题,随机数和伪随机算法
#做个小专题lua中的遍历机制详解
#编程语言范式(在学完BNF之后,回顾一下.表达式,函数,字面值,流程控制,异常处理,数据结构,类型系统)
更多格式还不能发.应该先把后续的两章给定下来.
模块

lua语言的编译
lua和C的交互

C语言

zsh
gcc
gdb
emacs

lua拓展和包管理

独立使用的lua虚拟机的命令行参数
luac的使用